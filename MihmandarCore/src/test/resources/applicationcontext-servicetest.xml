<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/task
http://www.springframework.org/schema/task/spring-task-3.0.xsd">


	<!-- component-scan base-package icerisindeki annotaionli beanleri ayaga 
		kaldirip, execute etmesi gereken metotla varsa postconstruct gibi execute 
		eder. -->
	<context:annotation-config />

	<!--<context:component-scan base-package="com.uniyaz.flexcity" />-->


<!-- Scheduled ve Async annotasyonlarının çalışması için -->
    <task:annotation-driven/>

	<!-- @Transactional annotation'inin calismasi icin bunun olmasi gerekiyor -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="springApplicationContext"
		class="com.uniyaz.flexcity.core.mis.common.context.SpringApplicationContext" />


	<!-- Uygulamaya ait property'leri bu dosyadan almasini soyluyoruz. -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="fileEncoding" value="UTF-8"/>
        <property name="locations">
            <list>
                <value>file:///${flexCityConfigPath}/config/application-shared.properties</value>
                <value>file:///${flexCityConfigPath}/config/default/application-env-shared.properties</value>
                <value>file:///${flexCityConfigPath}/config/default/application-dev.properties</value>
            </list>
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy" ref="namingStrategy" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.default_schema">${jdbc.username}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl}</prop>-->
				<prop key="hibernate.connection.release_mode">auto</prop>

				<prop key="org.hibernate.envers.default_schema">${jdbc.audit.username}</prop>
				<prop key="org.hibernate.envers.store_data_at_delete">true</prop>
				<prop key="org.hibernate.envers.revision_field_name">id_revinfo</prop>
				<prop key="org.hibernate.envers.revision_type_field_name">rev_type</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.uniyaz.flexcity" />
	</bean>

	<bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>${cp3o.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${cp3o.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${cp3o.maxPoolSize}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${cp3o.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireIncrement">
			<value>${cp3o.acquireIncrement}</value>
		</property>
		<property name="maxStatements">
			<value>${cp3o.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${cp3o.numHelperThreads}</value>
		</property>
	</bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource" /> <!-- Bunu activiti Hibernate'in trx'ini kullansın diye ekledik, murat -->
	</bean>

</beans>
